services:

  # Database service for Temporal
  postgresql:
    image: postgres:14
    container_name: temporal-postgresql
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
      POSTGRES_DB: temporal
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - temporal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U temporal -d temporal"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Temporal services
  temporal:
    image: temporalio/auto-setup:1.27.2
    container_name: temporal
    ports:
      - "7233:7233"
    environment:
      - DB=postgres12
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - temporal-network
  # Temporal admin tools
  temporal-admin-tools:
    image: temporalio/admin-tools:1.27
    container_name: temporal-admin-tools
    depends_on:
      - temporal
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal:7233
    networks:
      - temporal-network

  temporal-ui:
    image: temporalio/ui:2.37.2
    container_name: temporal-ui
    ports:
      - "8080:8080"
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:8080
    depends_on:
      - temporal
    networks:
      - temporal-network

  client:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: adflow-client
    depends_on:
      - temporal
    networks:
      - temporal-network
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    profiles:
      - "cli"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: adflow-worker
    depends_on:
      - temporal
    networks:
      - temporal-network
    environment:
      - TEMPORAL_ADDRESS=temporal:7233

  vault:
    image: hashicorp/vault:1.19.5
    container_name: vault
    ports:
      - "8200:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "dev-token"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8200"
      VAULT_ADDR: "http://127.0.0.1:8200"
    command: server -dev
    cap_add:
      - IPC_LOCK
    networks:
      - temporal-network
    # volumes:
    #   - ./vault/vault/data:/vault/file
    #   - ./vault/vault/config:/vault/config

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: adflow-ui
    ports:
      - "3000:3000"
    depends_on:
      - temporal-ui
    networks:
      - temporal-network

networks:
  temporal-network:
    driver: bridge

volumes:
  postgresql: